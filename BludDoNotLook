-- Execute Control
local maxExecutes = 5
if not getgenv().executeCount then
    getgenv().executeCount = 0
end

getgenv().executeCount = getgenv().executeCount + 1
if getgenv().executeCount > maxExecutes then
    game:GetService("Players").LocalPlayer:Kick("Many Execute Detected.")
    return
end

-- üîí Anti-Leak / Place Lock
local expectedPlaceId = 126884695634066
if game.PlaceId ~= expectedPlaceId then
    game:GetService("Players").LocalPlayer:Kick("‚ö†Ô∏è This script is not authorized to run in this game.")
    return
end

-- Load Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
Rayfield:LoadConfiguration()

local Window = Rayfield:CreateWindow({
   Name = "üåÉ Egg Randomizer üéá",
   LoadingTitle = "Loading Egg Randomizer",
   LoadingSubtitle = "By kenimm1",
   Theme = "Default",
   ToggleUIKeybind = "K",

   ConfigurationSaving = {
      Enabled = true,
      FileName = "EggRandomizer"
   },

   KeySystem = true,
   KeySettings = {
      Title = "Egg Randomizer Key",
      Subtitle = "Access Required",
      Note = "Key Is:Enjoy!",
      FileName = "RandomizerKey",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {"Enjoy!"}
   }
})

-- Create Main Tab
local MainTab = Window:CreateTab("Pet Randomizer", 4483362458)

-- üß† Game Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer

-- üê£ Pet Table
local petTable = {
    ["Common Egg"] = { "Dog", "Bunny", "Golden Lab" },
    ["Uncommon Egg"] = { "Chicken", "Black Bunny", "Cat", "Deer" },
    ["Rare Egg"] = { "Pig", "Monkey", "Rooster", "Orange Tabby", "Spotted Deer" },
    ["Legendary Egg"] = { "Cow", "Polar Bear", "Sea Otter", "Turtle", "Silver Monkey" },
    ["Mythical Egg"] = { "Grey Mouse", "Brown Mouse", "Squirrel", "Red Giant Ant" },
    ["Bug Egg"] = { "Snail", "Caterpillar", "Giant Ant", "Praying Mantis" },
    ["Night Egg"] = { "Frog", "Hedgehog", "Mole", "Echo Frog", "Night Owl" },
    ["Bee Egg"] = { "Bee", "Honey Bee", "Bear Bee", "Petal Bee" },
    ["AntiBee Egg"] = { "Wasp", "Moth", "Tarantula Hawk" },
    ["Oasis Egg"] = { "Meerkat", "Sand Snake", "Axolotl" },
    ["Paradise Egg"] = { "Ostrich", "Peacock", "Capybara" },
    ["Dinosaurs Egg"] = { "Raptor", "Triceratops", "Stegosaurus" },
    ["Primal Egg"] = { "Parasaurolophus", "Iguanodon", "Pachycephalosaurus" },
}

local espEnabled = true
local truePetMap = {}
local cooldown = false
local autoRunning = false

-- üåü ESP Function
local function applyESP(model, petName)
    if model:FindFirstChild("PetBillboard", true) or model:FindFirstChild("ESPHighlight") then return end
    if not espEnabled then return end

    local part = model:FindFirstChildWhichIsA("BasePart")
    if not part then return end

    local labelGui = Instance.new("BillboardGui", part)
    labelGui.Name = "PetBillboard"
    labelGui.Size = UDim2.new(0, 250, 0, 50)
    labelGui.StudsOffset = Vector3.new(0, 4.5, 0)
    labelGui.AlwaysOnTop = true
    labelGui.MaxDistance = 500

    local label = Instance.new("TextLabel", labelGui)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = petName .. " (" .. model.Name .. ")"
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0.4
    label.TextScaled = true
    label.Font = Enum.Font.FredokaOne

    local hl = Instance.new("Highlight", model)
    hl.Name = "ESPHighlight"
    hl.FillColor = Color3.fromRGB(255, 200, 0)
    hl.OutlineColor = Color3.fromRGB(255, 255, 255)
    hl.FillTransparency = 0.7
    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    hl.Adornee = model
end

local function removeESP(model)
    if model:FindFirstChild("PetBillboard", true) then model:FindFirstChild("PetBillboard", true):Destroy() end
    if model:FindFirstChild("ESPHighlight") then model:FindFirstChild("ESPHighlight"):Destroy() end
end

-- üìç Nearby Eggs
local function getNearbyEggs(radius)
    local eggs = {}
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return eggs end

    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and petTable[obj.Name] then
            local cf, _ = obj:GetBoundingBox()
            local dist = (cf.Position - root.Position).Magnitude
            if dist <= radius then
                table.insert(eggs, obj)
            end
        end
    end
    return eggs
end

-- üé≤ Randomize Function
local function randomizeEggs(callback)
    if cooldown then
        Rayfield:Notify({Title = "‚è≥ Cooldown Active", Content = "Please wait before randomizing again.", Duration = 3})
        return
    end

    cooldown = true
    local timer = 10
    coroutine.wrap(function()
        while timer > 0 do
            callback("Cooldown: " .. timer .. "s left...")
            wait(1)
            timer -= 1
        end
        callback("üé≤ Randomize Pets")
        cooldown = false
    end)()

    local eggs = getNearbyEggs(60)
    for _, egg in ipairs(eggs) do
        local pets = petTable[egg.Name]
        local chosen = pets[math.random(1, #pets)]
        truePetMap[egg] = chosen
        applyESP(egg, chosen)
    end
    Rayfield:Notify({Title = "‚úÖ Eggs Randomized", Content = "Total: " .. #eggs, Duration = 3})
end

-- üëÅÔ∏è ESP Toggle
MainTab:CreateToggle({
    Name = "üëÅÔ∏è ESP",
    CurrentValue = true,
    Callback = function(value)
        espEnabled = value
        for _, egg in pairs(getNearbyEggs(60)) do
            if espEnabled then
                if truePetMap[egg] then
                    applyESP(egg, truePetMap[egg])
                end
            else
                removeESP(egg)
            end
        end
    end
})

-- üé≤ Randomize Button
local randomizeButton
randomizeButton = MainTab:CreateButton({
    Name = "üé≤ Randomize Pets",
    Callback = function()
        randomizeEggs(function(text)
            if randomizeButton and randomizeButton.Set then
                randomizeButton:Set(text)
            end
        end)
    end
})

-- üîÅ Auto Randomizer Toggle
MainTab:CreateToggle({
    Name = "üîÅ Auto Randomizer",
    CurrentValue = false,
    Callback = function(value)
        autoRunning = value
        if autoRunning then
            Rayfield:Notify({Title = "üîÅ Auto Mode", Content = "Auto Randomizing every 10s", Duration = 3})
            coroutine.wrap(function()
                while autoRunning do
                    randomizeEggs(function(text)
                        if randomizeButton and randomizeButton.Set then
                            randomizeButton:Set(text)
                        end
                    end)
                    wait(11)
                end
            end)()
        else
            Rayfield:Notify({Title = "‚õî Auto Mode Stopped", Content = "Stopped auto randomizer.", Duration = 2})
        end
    end
})

-- üßπ Clear ESP Button
MainTab:CreateButton({
    Name = "üßπ Clear ESP",
    Callback = function()
        for egg in pairs(truePetMap) do
            removeESP(egg)
        end
        Rayfield:Notify({Title = "ESP Cleared", Content = "Cleared Please Off And Turn On Esp To See Pets.", Duration = 2})
    end
})

-- ‚úÖ Initial ESP
for _, egg in pairs(getNearbyEggs(60)) do
    local pets = petTable[egg.Name]
    local chosen = pets[math.random(1, #pets)]
    truePetMap[egg] = chosen
    applyESP(egg, chosen)
end
